/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.desafio1;

import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author andersonr
 */
public class ConversionCalculatorWindow extends javax.swing.JFrame {

    /**
     * Creates new form ConversionCalculatorWindow
     */
    public ConversionCalculatorWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        textInput = new javax.swing.JTextField();
        optionBin = new javax.swing.JRadioButton();
        optionOct = new javax.swing.JRadioButton();
        optionDec = new javax.swing.JRadioButton();
        optionHex = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textOutput = new javax.swing.JTextArea();
        btnExecute = new javax.swing.JButton();
        btnHistory = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        textInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textInputActionPerformed(evt);
            }
        });

        buttonGroup1.add(optionBin);
        optionBin.setText("BIN");
        optionBin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionBinActionPerformed(evt);
            }
        });

        buttonGroup1.add(optionOct);
        optionOct.setText("OCT");

        buttonGroup1.add(optionDec);
        optionDec.setSelected(true);
        optionDec.setText("DEC");

        buttonGroup1.add(optionHex);
        optionHex.setText("HEX");

        textOutput.setColumns(20);
        textOutput.setRows(5);
        jScrollPane1.setViewportView(textOutput);

        btnExecute.setText("Executar");
        btnExecute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecuteActionPerformed(evt);
            }
        });

        btnHistory.setText("Hist√≥rico");
        btnHistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHistoryMouseClicked(evt);
            }
        });
        btnHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHistoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textInput, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(optionBin)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(optionOct)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(optionDec)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(optionHex)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                        .addComponent(btnExecute))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnHistory)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExecute))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(optionBin)
                    .addComponent(optionOct)
                    .addComponent(optionDec)
                    .addComponent(optionHex))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnHistory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void optionBinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionBinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_optionBinActionPerformed

    private void textInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textInputActionPerformed

    private void btnExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExecuteActionPerformed
        String output = "";
        
        InputHistory hist = new InputHistory();
        Calculator calculator = new ConversionCalculator();
        
        List<Object> cmd = new ArrayList<>();
        
        cmd.add(new Integer(ConversionCalculator.BIN));
        cmd.add(new Integer(ConversionCalculator.OCT));
        
        String value = textInput.getText(); 
        cmd.add(value);
        
        int type = 0;
        if (this.optionBin.isSelected()) {
            cmd.set(0, new Integer(type = ConversionCalculator.BIN));
        } else if (this.optionOct.isSelected()) {
            cmd.set(0, new Integer(type = ConversionCalculator.OCT));
        } else if (this.optionDec.isSelected()) {
            cmd.set(0, new Integer(type = ConversionCalculator.DEC));
        } else if (this.optionHex.isSelected()) {
            cmd.set(0, new Integer(type = ConversionCalculator.HEX));
        }
        
        try {
            hist.addHistory(new InputPair(type, value));
        } catch (Exception e) {
            textOutput.setText(e.getMessage());
            return;
        }
        
        if (!this.optionBin.isSelected()) {
            cmd.set(1, new Integer(ConversionCalculator.BIN));
            output += "BIN: " + calculator.execute(cmd) + "\n";
        } 
        
        if (!this.optionOct.isSelected()) {
            cmd.set(1, new Integer(ConversionCalculator.OCT));
            output += "OCT: " + calculator.execute(cmd) + "\n";
        }
        
        if (!this.optionDec.isSelected()) {
            cmd.set(1, new Integer(ConversionCalculator.DEC));
            output += "DEC: " + calculator.execute(cmd) + "\n";
        }
        
        if (!this.optionHex.isSelected()) {
            cmd.set(1, new Integer(ConversionCalculator.HEX));
            output += "HEX: " + calculator.execute(cmd) + "\n";
        }
        
        textOutput.setText(output);
    }//GEN-LAST:event_btnExecuteActionPerformed

    private void btnHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHistoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnHistoryActionPerformed

    private void btnHistoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHistoryMouseClicked
        // TODO add your handling code here:
        InputHistory hist = new InputHistory();
        String output = new String("");
        
        try {
            List<InputPair> list = hist.loadHistory();
            for (InputPair p: list) {
                output += p.toString() + "\n"; 
            }
            textOutput.setText(output);
        } catch(Exception e) {
            textOutput.setText(e.getMessage());
        }
    }//GEN-LAST:event_btnHistoryMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConversionCalculatorWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConversionCalculatorWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConversionCalculatorWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConversionCalculatorWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConversionCalculatorWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExecute;
    private javax.swing.JButton btnHistory;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton optionBin;
    private javax.swing.JRadioButton optionDec;
    private javax.swing.JRadioButton optionHex;
    private javax.swing.JRadioButton optionOct;
    private javax.swing.JTextField textInput;
    private javax.swing.JTextArea textOutput;
    // End of variables declaration//GEN-END:variables
}
